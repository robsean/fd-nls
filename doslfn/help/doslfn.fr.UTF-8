* Pour le texte en allemand cf. DOSLFN.DE (pour v0.32o).
* Pour le texte en anglais cf. DOSLFN.TXT.
* Pour le journal des modifications, voyez la fin du fichier.

+----------------------------------------------------------------------+
| DOSLFN - Un pilote en mode réel pour les noms de fichier longs sous  |
|	   DOS avec prise en charge complète de l'Unicode et du DBCS ! |
+----------------------------------------------------------------------+

APPROCHE

Bien sûr j'avais besoin d'un tel programme depuis 1996, mais sachant qu'un
tel outil est utile à tous, j'ai cru que quelqu'un allait l'écrire. Donc j'ai
attendu, et l'année dernière j'ai trouvé certains outils, par exemple
LFNDOS.EXE, écrit en 1998, pas si ancien qu'attendu.

Ce programme était écrit pour fonctionner avec COMMAND.COM de Win9x et ne
marche pas avec mon gestionnaire de fichiers favori, Volkov Commander.
(Il est impossible d'aller dans les répertoires avec un nom long.) Et ce TSR
est si LENT et de plus, consomme 64 Ko de mémoire, ce qui est beaucoup trop !
Ce programme ne peut créer des fichiers et répertoires avec des lettres en
minuscules (Pourquoi ??), il est impossible d'échapper aux serpents (tildes,
selon la clef de registre NameNumericTail=0), et, enfin, il ne prend pas en
charge les umlauts correctement.


MA TENTATIVE :

Bien entendu, un tel programme doit être écrit en assembleur. Avec Turbo
Assembler que j'apprécie, j'ai utilisé le mode IDEAL peu commun pour activer
les composants de structure locale parmi d'autres avantages (par exemple la
vitesse). Ce programme est conçu afin de ne pas contenir les bugs décrits
ci-dessus. Et j'allais prendre en charge les noms longs sur CD (Joliet), très
utile pour restaurer les sauvegardes sous DOS pur. Un outil correct pour cela
est LFN tools d'Odi, mais il ne s'agit pas là d'un pilote.

Ce qui est important pour moi est l'utilité en conjonction avec Volkov
Commander, le meilleur clone de Norton Commander que je connaisse. Il prend
en charge les noms longs, est bien plus léger que l'original et possède des
fonctionnalités intéressantes. (Malheureusement, il existe certains
inconvénients tels que des raccourcis manquants pour le tri des répertoires ou
une fonctionnalité pour connecter des ordinateurs qui fait défaut.)

Lors de la programmation, je dois dire qu'il n'est pas si facile d'écrire un
pilote parfait avec presque toutes les fonctionnalités comme je l'avais pensé
au début. Ce n'est guère une surprise que je n'en ai pas trouvé un plus tôt -
et c'est bien difficile à programmer.

Au début, un objectif était de consommer le moins de mémoire possible, environ
4 Ko. Maintenant, je suis très très éloigné de ce but, et je suis heureux que
cela consomme moins de 12 Ko. Comparé avec 64 Ko ce n'est déjà pas si mal.

Une autre difficulté était de comprendre la sémantique des noms de fichiers
longs de Windows9x. Ce que "cd .." devrait être est couramment connu, "cd ..."
est nouveau avec 9x et remonte de deux niveaux, "cd ...." de trois et ainsi de
suite. (J'étais familiarisé avec le fait que les répertoires "." et ".." ne
sont pas utilisés directement par DOS.) Ou la manière dont la correspondance
des noms de fichiers longs est effectué : une partie est connu du monde UNIX
(comme *1 qui correspond à tous les fichiers se terminant avec "1"), une partie
est spécifique à Win32, comme "*." qui correspond à tous les fichiers SANS
extension. Et une extension est définie en tant que partie succédant au DERNIER
point, pas une chaîne des premiers points. Ou qu'il soit possible de créer des
fichiers avec des espaces et/ou des points au début, mais que les espaces et/ou
points à la fin soient tronqués. En gardant "*." à l'esprit, cela est
nécessaire car il n'existe pas de manière de retrouver les fichiers avec un
point à la fin. Par conséquent, les noms de fichiers avec des espaces et des
points seuls ne sont pas autorisés, avec l'exception virtuelle des répertoires
"." et ".." inutiles. COMMAND.COM utilise la fonctionnalité DOS Get Extended
Error Information (Obtenir des informations étendues sur l'erreur), donc j'ai
dû utiliser la fonction complémentaire peu pratique pour définir ce code
d'erreur afin que COMMAND.COM fonctionne correctement.


EXPLICATION DES COMMUTATEURS :

~ (utilisation du tilde) : Par défaut, Win9x ajoute un désignateur "~1" à
  l'alias de tout nom de fichier long, "~2" s'il y a un conflit et ainsi de
  suite. Par conséquent, sous DOS pur ces noms de fichiers longs ne peuvent pas
  adresser l'alias. Ce comportement semble avoir été implémenté en raison du
  comportement erroné de certains logiciels testés. (Je suppose qu'il
  s'agissait de certains vieux logiciels de Microsoft.)

  Pour les utilisateurs habituels de DOS et Windows, cela n'est guère pratique.
  DOS pur est capable de "prendre en charge" les noms longs en les tronquant
  sous la forme 8.3. Si le nom de contient pas d'espaces ou de points multiples
  le même nom long peut adresser un fichier à la fois avec et sans LFN
  disponible. Les utilisateurs peuvent maintenir la compatibilité de la
  configuration de certains programmes indépendamment, peu importe s'ils
  utilisent {Win9x ou DOSLFN}.

  Vous pouvez désactiver l'utilisation du tilde dans Win9x en ajoutant la clef
  binaire suivante :
	REGEDIT4
	[HKEY_LOCAL_MACHINE\System\CurrentControlSet\control\FileSystem]
	"NameNumericTail"=hex:00
  Puis vous devrez redémarrer Windows. (N'oubliez pas d'appuyer sur la touche
  "Maj" lorsque vous confirmerez la sélection de "redémarrer" ; il n'est pas
  nécessaire de redémarrer l'ordinateur.)

  Vous pouvez également rechercher le mot-clef "NameNumericTail" sur Internet.

t (effet tunnel) : Cette fonctionnalité, intégrée dans le système de fichiers
  Win9x permet aux noms de fichiers longs de survivre lors d'une modification
  avec un éditeur de texte conventionnel (8.3) ou un outil comparable. Ils
  remplacent les fichiers comme suit :
  * effacer le fichier <alias>.bak (s'il existe)
  * renommer le fichier original <alias>.txt en <alias>.bak
  * créer un nouveau fichier <alias>.txt

  Avec cette séquence, le nom de fichier long sera perdu à tout jamais.
  Mais si "l'effet tunnel" est actif, Win9x et DOSLFN surveillera les séquences
  détruire-renommer-créer (delete-rename-create (DRC)) et attachera
  automatiquement les entrées de nom de fichier long précédemment effacées aux
  noms nouvellement créés, si l'<alias> est le même.
  La séquence DRC ci-dessus peut aussi être tronqué en DR, DC, RR ou bien RC,
  et fonctionne également pour les répertoires.
  Comme documenté dans le CD MSDN, les "informations de tunnel" internes de
  Win 9x sont conservées 15 secondes, cependant je n'ai pu trouvé de perte.
  plus, le tunnel sous Win9x fonctionne dans les deux "directions", il se
  souvient de l'alias si un programme supportant le LFN effectue la même
  procédure. Par conséquent, vous ne pouvez pas vous débarrasser du "~" dans
  "PROGRA~1" si vous renommez simplement "Program Files" en "Programs" et
  inversement. (Vous pouvez redémarrer Windows entre deux renommages pour
  obtenir l'effet voulu.)

  De plus, comme requis dans un SE multitâche, Win9x a plusieurs "informations
  de tunnel", permettant à deux ou davantages de processus (programmes Win16 ou
  DOS) d'effectuer de telles séquences DRC en même temps ou de manière
  entrelacées dans un même processus. Pour des raisons de simplicité, DOSLFN
  ne prendra en charge qu'une seule "information de tunnel".

c (Prise en charge des CD-ROM) : Active la prise en charge des CD-ROM, c'est-à-
  dire que DOSLFN utilise bien plus de mémoire pour conserver le code pour
  l'initialisation de et l'accès au CD-ROM. Ce commutateur tient compte du
  chargement de SHSUCDX v3.01 (cette version de DOSLFN ne fonctionne pas avec
  MSCDEX ou les versions antérieures de SHSUCDX). Vous devez inclure un
  commutateur c+ si vous chargez DOSLFN avant SHSUCDX et voulez les noms de
  fichiers longs sur le CD-ROM !

i (utilisation de l'indicateur InDOS) : Les programmes résidents (TSR) qui
  utilisent les noms de fichiers longs (LFN) ont besoin de savoir si DOSLFN est
  toujours actif ou pas. Pire encore, travailler avec des noms courts peut
  causer des pertes de données si DOSLFN enlève ou ajoute des LFN avec l'effet
  tunnel (cf. commutateur -t).
  Le problème de l'utilisation de l'indicateur InDOS est que lorsque DOSLFN
  apelle OldInt21, l'indicateur InDOS augmente à 2. Je ne connais pas de
  solution efficace pour garder l'indicateur InDOS différent de zéro _et_
  pour appeler DOS.
  Si vous rencontrez des problèmes, vous pouvez le désactiver. Activé (On) est
  la valeur par défaut.

z DOSLFN doit convertir l'Unicode en page de code locale et cela dépend de la
  langue. Comme DOS (ou NLSFUNC) n'a pas un tel tableau intégré, celui-ci doit
  être livré à DOSLFN.
  19 tableaux de traduction Unicode, par exemple 437 (IBM Standard IBM, pour
  pouvoir remettre à zéro), 850 (Europe de l'Ouest), 852 (Europe de l'Est), 866
  (cyrillique), et deux pour le grec sont désormais groupés avec DOSLFN.
  Une page de code peut être chargée/modifiée même lorsque DOSLFN est résident.
  La plupart des utilisateurs européens utilisent les umlauts très rarement (en
  raison de soucis avec des logiciels mal programmés[*]), donc un tableau
  de code oublié n'est pas critique. Mais si vous voyez des noms de fichiers
  avec des caractères de soulignement inattendus, vous devriez charger le
  tableau de code. (DOSLFN convertit simplement les Unicode non convertibles en
  "_", sans notification pour les noms de fichiers désormais identiques.)
  Astuce : DOSLFN charge le "bon" tableau Unicode automatiquement au démarrage,
  donc vous n'avez pas besoin de ce commutateur même dans les pays de l'Europe
  de l'Est. De plus, DOSLFN charge un tableau automatiquement si vous modifiez
  la page de code avec NLSFUNC de DOS, mais vous devrez peut-être réserver
  un heap supplémentaire (Le DOS japonais doit inclure /m18000 si DOSLFN est
  chargé alors que le système est en mode américain).

  [*] Souvent, ce sont les logiciels Unix (par exemple "tar") qui effacent les
  umlauts. Unix est, de manière interne, un SE davantage 7 bits que 32 bits et
  cette limitation était répandue partout jusqu'à récemment (UTF-7 tout simple,
  codage MIME...)

m DOSLFN a besoin d'un heap interne pour stocker les données ; la plupart du
  temps pour les indicateurs "Find".  La taille de la zone de données a pour
  valeur par défaut 1000 octets. Des valeurs plus petites réduisent la
  consommation de mémoire par DOSLFN résident. Ce commutateur ne peut être
  utilisé alors que DOSLFN est résident ; la mémoire pourrait être utilisée.

m[sln] Spécifier la taille maximale du chemin de nom court (80), du chemin de
  nom long (260) et du nom de fichier (256). Notez que même si DOS ne changera
  pas en un chemin extra-long, cela peut toujours être spécifié explicitement,
  donc la valeur par défaut de 80 pourrait être insuffisant. Cf. MVALUES
  ci-dessous.

l DOSLFN est multilingue. S'il détecte un réglage d'Autriche ou d'Allemagne
  il utilisera par défaut l'allemand ; s'il s'agit de la France ou du Canada
  francophone, le français sera utilisé par défaut ; le turc pour la Turquie ;
  l'anglais sinon. Pour remplacer la langue, utilisez "ld" pour l'allemand,
  "le" pour l'anglais, "lf" pour le français ou "lt" pour le turc. Par exemple
  pour obtenir l'aide en anglais en Autriche, utilisez "doslfn -le -h" ou
  "doslfn leh".
  (Comme vous le voyez, DOSLFN ignore les préfixes des commutateurs et les
  espaces. Une espace de n'est nécessaire que pour la commande z.)
  Lorsque DOSLFN est résident, outrepasser la langue est permanent.

o Décalage du fuseau horaire. Si aucun fuseau horaire n'est entré, TZ sera
  relu. Voyez ci-dessous.

TZ Variable d'environnement de fuseau horaire - pour convertir l'horodatage FAT
  au format horaire de Win32 (un Int64 en 100 ns passe devant 1.1.1601).
  Le format est [NOM]H[:MM] où NOM est une abréviation facultative, H est
  l'heure et MM sont les minutes facultatives. Le nombre exprime la distance
  de GMT (Greenwich) - positif si en arrière, négatif si en avant.
  Le temps de l'heure d'été (daylight savings time (DST)) ne peut être utilisé
  en raison de méthode de calculs inconnus pour de nombreux pays. En cas de
  besoin, DOSLFN doit avoir connaissance de tous les règles DST du passé (et de
  l'avenir) pour un pays donné, pour convertir l'horodatage des fichiers selon
  ses dates, pas à la date actuelle (la plupart de programmes semble souffrir
  de ce bug). L'utilisation des règles de DST américaines n'est pas applicable,
  bien que la plupart de programmes le fasse. Par conséquent, je suggère que
  les utilisateurs définissent la variable TZ, par exemple pour l'Europe
  centrale :
	set TZ=MET-1		durant l'hiver
	set TZ=MET-2		durant l'été
  sans utiliser aucune donnée DST - mais ils devront modifier leur AUTOEXEC.BAT
  deux fois par an.

  TZ n'est pas nécessaire pour convertir les systèmes de fichiers des CD (CDFS)
  à l'horodatage Win32 car ses dates contiennent des informations sur la
  distance du fuseau horaire (un octet par étape de 15 min) du pays où le CD a
  été créé. Cependant, afin de maintenir un horodatage identique partout dans
  le monde, la conversion de l'horodatage CDFS en FAT (en tant que valeur de
  retour pour presque toutes les fonctions de temps), les données de fuseau
  horaire d'à la fois TZ et CDFS doivent être mis ensemble pour calculer le
  temps FAT (=toujours local) correct - donc il est préférable de procédér par
  étapes de façon interne via le format de temps Win32.

** Si le profilage est activé **

p Afficher les données de profil - nombre d'appels, temps en secondes,
  description.

pr Remettre à zéro les données de profil - nombre d'appels et le temps seront
   mis à zéro.

pc Calibrer la constante de votre profil de timing. Le profilage utilise
  l'instruction Read Timestamp Counter (Lire le compteur d'horodatage, RDTSC))
  du Pentium pour le timing. Sauf si vous avez un P4 2.6 Ghz, vous aurez
  besoin de recompiler DOSLFN avec votre constante.


ACTIONS :

Les lettres d'action doivent rester à la fin de la ligne de commande, car
l'analyse de la ligne de commande s'arrête là.

L'action par défaut est de charger DOSLFN ou d'activer et afficher un message
court disant que DOSLFN est déjà chargé et actif.

Décharger DOSLFN peut échouer s'il existe un TSR utilisant Int21 ou 2F
au-dessus de DOSLFN. Si c'est le cas, DOSLFN se désactive, mais reste en
mémoire jusqu'à une autre action (comme le déchargement ou la réactivation).
Vous devez décharger ce (ou ces) TSR d'abord. Si c'est impossible (la plupart
du temps : des merdes de Microsoft), vous devez "simplement redémarrer votre
système".


QUELQUES REMARQUES SUR L'IMPLÉMENTATION :

Pour moi, un gros souci est la prise en charge sûre des noms longs sur CD.
Comme je veux bâtir par dessus MSCDEX, je dois construire des ponts entre
Joliet et ISO et j'ai découvert qu'il n'y avait pas de ponts sûrs ! (WinOnCD
grave une telle table de liens (Link Table), ce qui est bon pour moi, mais ce
n'est pas un standard.)
Windows 9x et NT "inventent" de nouveaux noms de fichiers courts et n'utilisent
pas du tout la partie ISO des CD Joliet, de plus, ces deux systèmes ont des
règles différentes. Donc, si vous mettez un CD avec des noms de fichiers longs
dans un lecteur et que vous le visionnez avec un vieux programme DOS, vous
trouverez jusqu'à trois noms courts différents pour un nom long sous DOS pur,
Windows 9x et Windows NT. Comme l'outil LFN d'ODI ne requière pas MSCDEX (sauf
pour lire les secteurs) il n'a pas de problème avec cela, un pilote devrait
donner les noms courts corrects pour les noms longs car MSCDEX devrait gérer
les noms courts.

Les versions précédentes de DOSLFN chargeaient un fichier qui procurait le lien
entre le nom Joliet et son homologue ISO. Cette version ne prend plus en charge
MSCDEX, utilise à la place SHSUCDX v3 qui lui, utilise le système Joliet (et
encore une autre méthode pour générer les noms courts).

Un autre problème est constitué par les accès en écriture et la cohérence des
tampons de secteur. Je veux mettre les données en mémoire tampon, mais une API
de noms courts peut modifier le contenu du disque ; donc je dois écarter tous
les tampons, au moisn pour ce lecteur, à chaque accès de répertoire de DOS,
même les vieux FCB.
Pour prendre en charge autant de version de DOS que possible (pas seulement
MS), je ne veux pas utiliser des structures internes de DOS non documentées.


VÉRIFIÉ COMME ÉTANT FONCTIONNEL SOUS :

* MS Windows NT 4 DOS-Box, lecteurs FAT12 et FAT16
  (mais vous devriez prendre le paquet NTLFN, qui est aussi un bon programme
  libre)
* MS-DOS 6.2
* MS-DOS 7.10, FAT32
* DR-DOS 7, avec un lecteur magnéto-optique


CE QUI NE FONCTIONNE PAS ENCORE :

* Les lecteurs avec lesquels la commande JOIN a été utilisée (mais les lecteurs
  pour lesquels la commande SUBST a été utilisée fonctionnent)
* Les lecteurs avec lesquels la commande ASSIGN a été utilisée (non testé, car
  c'est similaire à SUBST il devrait fonctionner plus tard)
* Windows 3.11 avec l'accès aux fichiers 32 bits activé force DOSLFN à utiliser
  son mode de repli (fallback) pour votre disque car VCACHE.386 empêche l'accès
  direct au disque via Int25/26 et Int21/AH=32. Veuillez désactiver "l'accès 32
  bits aux fichiers". (Vous pouvez laisser "l'accès 32 bits au disque" activé.)


CE QUI NE FONCTIONNERA PROBABLEMENT JAMAIS :

* Les fonctions autour de SUBST, AL=AAh	("query subst" est disponible)
* création de fichier depuis un serveur, AL=A9h
* récupération des informations d'indicateur, AL=A6h
* remise à zéro du lecteur, AL=0Dh


ASTUCE POUR UTILISATEURS DBCS (chinois, japonais, coréen, =CJK) :

Chargez simplement DOSLFN en tant qu'utilisateur occidental - mais DOSLFN
consomme bien plus de mémoire pour garder la table DBCS<->Unicode plus grande.

 UN PEU DE CONTEXTE :
Lors de l'amorçage depuis un disque d'urgence de Win9x/Me, DOS rapporte une
page de code de 932, 936, 949, or 950, mais la police d'affichage est encore la
437 du BIOS. De plus, la table Lead Byte DBSC interne de DOS n'est pas encore
activée. Par conséquent, vous verrez n'importe quoi lorsque vous listerez des
noms contenant des caractèreds chinois, indépendamment de l'utilisation de
DOSLFN. Après avoir démarré PDOS95.BAT, je suppose que l'affichage bascule vers
un mode de caractères graphiques chinois 40x24 pleine largeur (forme carrée)
(avec, entre des katakana de mi-largeur si vous utilisez CP932=Shift-JIS
nippon). La 25ème ligne est pour l'IME (Input Methode Editor, éditeur de
méthode d'entrée), simplement une entrée Romaji/Pinyin et une ligne de sélection
Kanji/Kanxi. (La sélection est nécessaire en raison du fait que davantage de
caractères avec des significations différentes existent pour une orthographe
donnée, surtout en japonais.)
De plus, la table Lead Byte DBCS interne de DOS est activée et DOSDLFN doit
alors convertir tous les caractères Unicode dans les noms longs vers DBCS et
vice versa lors d'une écriture.
Grâce à la disponibilité d'un utilisateur de Chine continentale (et à moi qui
comprend le japonais), les tests futurs sont limités à CP932 et CP936. (CP950
fonctionnerait encore, quant à elle.)
Notez qu'il existe de bien meilleurs outils pour remplacer PDOS95.BAT, j'avais
le programme/pilote "TechWay SCS V3.2" disponible (merci à  wengier) qui
fonctionne sous DOS6 en allemand également. L'un de ses avantages est la
détection automatique de symboles graphiques utilisés couramment et le fait
qu'il ne les interprète pas comme des caractères chinois (comme PDOS95.BAT le
ferait). Donc je pouvais exécuter mon gestionnaire de fichiers préféré
(vc.com), mon éditeur préféré (turbo.exe) et mon débogueur préféré (td.exe)
avec presque aucun gêne.


LES PROGRAMMES "DOSLFNMS", "MVALUES", "MK_TABLE", ET "LOWDMA" :

DOSLFNMS est destiné à être utilisé avec MS-DOS 7 (mais peut aussi fonctionner
avec FreeDOS) et possède certaines fonctionnalités pour réduire sa taille :
- ne se désactive pas lors du démarrage de Windows ;
- ne reconnaît pas les modifications de pages de code ;
- ne gère pas les jeux de caractères à double octet.

MVALUES peut être utilisé pour analyser vos lecteurs afin de trouver les
tailles optimales pour les commutateurs m. Cela peut économiser au-delà d'un Ko
de la taille résidente. Il n'accepte qu'un seul paramètre, qui est une chaîne
des lecteurs à analyser (la valeur par défaut est C).

MK_TABLE convertit une table Unicode (sous forme ASCII), téléchargeable sur
www.unicode.org, sous forme binaire de Volkov Commander utilisée par DOSLFN.

LOWDMA : cf. LOWDMA.TXT

----------------------------------------------------------------------------
Change.LOG: (+ ajout, - correction de bug, * modification)

Version 0.30 (01/01)
  Version initiale

Version 0.31 (04/01)
+ meilleure prise en charge de Windows NT (désormais inutile)
+ solution de dépassement de délai d'attente pour conserver les données pour
  les supports amovibles
+ Verrouillage automatique des volumes sous DOS 7 avant l'accès en écriture
* bidouillage avec la prise en chrage de PKZIP 2.50 - pas de solution finale
* ISR quitte avec IRET au lieu de RETF 2, pour le travail avec les débogueurs
  single-stepping

Version 0.32 (09/01)
- fonctionne avec les périphériques internes tels que NUL,CON,LPT...
* le code source a une option pour régler l'indicateur InDOS
+ taille de heap variable prise en charge ; la consommation de mémoire de
  DOSLFN dépend de l'utilisateur
+ fonction similaire à PRINTF intégrée (partie de code transitoire uniquement)
* modification du style de sortie pour l'action "Status"
+ quatre tables de traduction de code incluses avec le paquet zip
- Réduction des "flames" du fichier readme (lisez-moi)

Version 0.32a (10/01)
- répertoire racine erroné de certains lecteurs FAT32 (ce bug était rapporté
  constamment mais je ne pouvais le reproduire jusqu'à cette date)
- comportement erroné lors du démarrage de DOSLFN depuis un lecteur FAT32
  (ce bug avait été ajouté dans la version 0.32)
+ toutes les tables de traduction de code disponibles incluses avec le paquet
  ZIP
+ MK_TABLE.C amélioré (a été fait à la version 0.32) et inclus
* Le numérotage des versions avec un "a" indique qu'il existe une autre version
  0.33 actuellement en développement. Il s'agit là plutôt d'une version de
  correction de bugs.

Version 0.32b (10/01)
- AX invalide sur INT21/4E&4F, rapport par claude.caillet@free.fr
  (le comportement n'était pas documenté dans la liste de Ralf Brown en 03/99)
- du texte en anglais manquant dans DOSLFN.TXT (fuseau horaire, conditions de
  test), rapporté par Wu Yongwei <adah@sh163.net>
- CP850UNI.TBL était erroné, copié sur CP858UNI.TBL (c'était celle contenant le
  signe Euro, CP850 ne contient pas l'euro. (par <ldzip@ldzip.freeservers.com>)
+ MKLINK est ajouté, bien que la table de liens de sortie ne serve à rien pour
  l'instant

Version 0.32c (11/01)
- dans certains cas, *. ne fonctionne pas (par exemple échec de "copy *. tmp")
- FindFirst du caractère des périphériques retourne une erreur mais ne devrait
  pas (échec de "copy con xx"), les deux rapportés par wengierwu@sohu.com
* réduction de la taille du heap par défaut, les secteurs des CD ne sont pas
  encore à l'intérieur
* la taille de la table de liens interne a été étendu à 32 bits

Version 0.32d (06/02)
- échec complet sur les lecteurs sur lesquels la commande SUBST a été utilisée
  et qui ont été modifiés pour ne pas prendre en charge les noms longs
- L'alignement droit des soulignements d'insertion de la fin numérique était
  erroné (Caillet)
* MKLINK modifié pour vérifier la validité de la table de liens CeQuadrat
- MKLINK peut désormais gérer les disques multi-sessions et EasyCdCreator

Version 0.32e (06/02)
* réarrangement du code source, plus d'anglais dans la zone de déclaration
+ utilisation de l'indicateur InDOS (pré-réglable par l'utilisateur)
- VolumeStart livré par MSCDEX était faux, routine fondée sur IOCTL insérée
* commutateurs "checksum linkage" et "LoSA" enlevés, "LoSA" sera dans VxD
- LFN GetFAttr du répertoire racine sur un CD-ROM
* modification des réglages par défaut (utilisation du tilde activée)
+ DOSLFN peut désormais charger les fichiers générés par MKLINK (c'est-à-dire
  prendre en charge tous les CD-ROM Joliet)
+ Fonction pour rapporter LastError (dernière erreur)
- correction d'un bug mineur dans MKLINK (InSTab comparait LowWord au lieu de
  LongInt)
* le lien (connu) vers le répertoire racine inclus dans *.JLT, MKLINK modifié à
  nouveau
* MKLINK modifié de façon interne, en utilisant un objet, ajout de "tree order
  check" ("vérification de l'ordre de l'arborescence")

Version 0.32fà (09/02)
- Retourner la valeur CX à LFN_FindFirst/FindNext
* appel interne de Extended Open/Create(6C) (ouvrir/créer étendu) au lieu de
  Creat(3C)
- reconnaître les CD amorçables aussi (MKLINK pas encore)
* préparation de l'effet tunnel
Version 0.32fá (10/02)
- ouverture/création étendues (bug depuis 0.32fà)
- LFN_DirEnt enlevé pour lfn_rmdir (le bug était toujours présent)
* plus d'appels Int21 récursifs (sauf pour l'accès .JLT)
* pas de récursion vers sfn_unlink pour lfn_unlink (plus rapide)
+ effacer avec les jokers (non testé ; pas encore pour le mode de repli)
Version 0.32fâ (11/02)
- interprétation de l'étiquette de volume en tant que composant du chemin
Version 0.32fã (12/02)
- la plupart (avec un peu de chance tous) les bugs d'EDIT.COM corrigés
- Un bug laid d'écriture sur mauvais segment corrigé (introduit dans la version
  0.32e)
Version 0.32fä (12/02)
+ L'effacement avec les jokers désormais implémenté, au moins pour les lecteurs
  FAT
Version 0.32f (12/02) - dernière version "f"
- créer un répertoire déjà existant retourne "file not found" ("fichier
  introuvable") [wengier]
- la commande rename oublie ou détruit parfois un autre LFN (deux bugs)

Version 0.32g (12/02)
- Bug VC Alt+F7 (la barre oblique inversée à la fin sur les appels lfn_name
  étaient enlevée)
- Bug d'effacement récursif VC et bug de création récursive PKZIP (bug
  FastOpenCache)
* arrêt du développement de la version 0.33

Version 0.32h (12/02)
- Accès SFN avec des espaces (de façon surprenante, cette correction réduit la
  taille du code)
- Corrections mineures dans MKLINK : option de verbosité, arrangement de la
  table
+ MKLINK créé une table de liens si CeQuadrat LT n'est pas en première session
+ MKLINK a reçu une page de code 437 intégrée (pour la sortie verbeuse)
- Le répertoire racine du CD-ROM affiche les entrées . et ..
- la commande "cd" avec une barre oblique inversée à la fin était désactivée
  par la correction du bug VC Alt+F7

Version 0.32i (12/02)
- plantage au démarrage de DOSLFN avec un CD-ROM en tant que lecteur actuel
- gestion incorrecte et inutilité de l'option /p
- utilisation d'un mauvais répertoire pour le chargement automatique de la
  table Unicode

Version 0.32j (12/02 - Xmas)
+ écriture de LFNXLAT.386 - une API en mode protégé pour Windows et ses
  "boîtes" DOS
+ Interface Int2F pour le chargement de VxD (Win3) ou sa désactivation (Win95+)
+ Vérification des versions DOS et Windows, refus si DOS<4 ou Win9x fonctionne
+ Notification automatique de modification de page de code via Int2F (pas
  encore testé)
+ La fonctionnalité de rapport LastError désormais fonctionnelle avec cinq
  messages
+ calcul automatique de la taille du tas fondé sur le fichier .JLT le plus
  grand
+ option /c fonctionnelle
+ réduction de la consommation mémoire en mode FAT seul (c'est-à-dire sans
  prise en charge des CD-ROM)
  VEUILLEZ INCLURE L'OPTION /c+ SI VOUS CHARGEZ DOSLFN AVANT MSCDEX ET VOULEZ
  JOLIET
- chargement de CeQuadrat LT depuis le CD-ROM si en multi-session
- au moins trois bugs concernant l'expansion des répertoires
- vous pouviez créer un nom de fichier contenant des jokers dans son nom long
+ prise en charge complète des lecteurs sujets à une commande SUBST
- Les noms longs ISO plantent DOSLFN - désormais simplement tronqués en 12
  caractères
- le renommage échoue lors de la seule modification de la casse
* la gestion des erreurs setjmp/longjmp tout comme Catch/Throw simplifie le
  code source
+ effet tunnel (préserve le nom long pour les anciens éditeurs, etc.)
- impossible de créer fichier/répertoire avec le même nom que l'étiquette de
  volume
- l'acceptation incompatible de la barre oblique inversée tend à faire échouer
  PKUNZIP
+ option /t fonctionnelle - désormais toutes les options sont fonctionnelles
- bug dans le listage du CD-ROM Joliet sur le répertoire racine (les fichiers
  deviennent des répertoires)
+ préparation de la prise en charge de DBCS

Version 0.32k (01/03)
- "dir makefile" n'affiche pas makefile
  (ce petit bug a nécessité la réécriture d'une grande partie de DOSLFN)
* Sans .TBL, DOSLFN utilise désormais par défaut ISO-Latin1 au lieu de CP437.
  Cela est dû à des changements internes de la prise en charge de DBCS.
  LES UTILISATEURS DE L'EUROPE DE L'OUEST NE DEVRAIENT PAS EFFACER LE FICHIER
  CP437UNI.TBL !
- impossible de gérer les fichiers qui ont 0xE5 en tant que premier octet
  ("bug" DOS TRUENAME (nom véritable) @0.32j)
+ Le format  de fichier DBCS .TBL est désormais déclaré, cf. TBL.TXT
+ Trois nouvelles pages de code ont été ajoutées : japonais (Shift-JIS),
  chinois simplifié (GB2312, sous-ensemble de GBK), chinois traditionnel (BIG5)
+ Ajout de la prise en charge complète de DBCS, mais il m'est impossible de le
  tester
  LES UTILISATEURS CHINOIS OU JAPONAIS doivent inclure /m18000 ou similaire
  pour donner plus de tas
  (Cette option sera automatisée dans une prochaine version.)
- suite à l'accès des périphériques, des corruptions de données peuvent avoir
  lieu
- lors de l'utilisation de différentes versions de DOSLFN, des chaînes erronées
  peuvent apparaître
- l'option /z switch ne fonctionne plus depuis 0.32j

Version 0.32l (01/03)
- La prise en charge de DBCS ne fonctionne pas du tout (bugs multiples),
  vérifié avec TechWay SCS
- messages erronés lors du chargement de DBCS sans prise en charge des CD-ROM
- table DBCS partiellement écrasée
* section "code d'initialisation critique" plus stricte
+ calcul automatique de la taille du tas étendu pour inclure le fichier .TBL
  Les utilisateurs de CJK n'ont plus besoin de basculer

Version 0.32m (01/03)
- l'interrogation de l'aide avec /? ou -h fait planter DOS depuis 0.32l (oups !)
- valeur de retour erronée pour la commande DEL  depuis 0.32fá
* performance légèrement améliorée pour la création de fichiers aux noms courts
  tout en majuscules
- CP950UNI.TBL était dans un format erroné (périmé)
+ quatrième table Unicode DBCS Unicode, CP949UNI (coréen) ajouté, mais j'ai
  besoin de retours !

Version 0.32n (01/03)
+ le cinquième CP936UNI.GBK est une table Unicode pour le chinois simplifié
  complet
- échec du chargement automatique de la table Unicode avec la commande CHCP
- erreur de l'écrasement de la ligne de commande (impossible d'entrer des
  chemins plus longs),
  l'espace variable a été entièrement réarrangé
+ gestion des noms UNC en tant que mode de repli (pas complètement testé)
- erreur de nom véritable sur les lecteurs sujet à la commande SUBST
- erreur de création de fichier/répertoire en mode de repli
+ la vérification de ";?" (?=1..9) à la fin des noms de fichiers ISO/Joliet
  plutôt que d'enlever deux caractères, puisque NERO peut générer de tels
  CD-ROM non ISO
* problème VCACHE.386 détecté, pas de correction si ce n'est de ne pas utiliser
  l'accès 32 bits aux fichiers
+ un simple analyseur de tas détecte la taille et les zones libres
+ FMLFN.DRV, un fournisseur de noms longs très bêta pour le gestionnaire de
  fichiers Windows
+ DOSLFN devrait être disponible sur SimTel (www.simtel.net)
+ MKLINK a désormais aussi la prise en charge d'Unicode et de DBCS (pour sa
  sortie sur l'écran)
- liens multiples dans le fichier .JLT générés par MKLINK
- les tailles de répertoire non modulo 2048 peuvent faire planter MKLINK
  (pas un standard ISO)

Version 0.32o (05/03)
- l'option /? fait encore planter le système
+ Les chaînes de texte en russe sont disponibles mais pas encore implémentées
 Les modifications et corrections de bugs suivantes sont inspirés par
 jadoxa@yahoo.com.au mais il a fait bien davantage :
* optimisations de code mineures
- définition d'un attribut en lecture seule lors de la création d'un SFN (nom
  court) avec l'effet tunnel
* L'accès aux secteurs passe par le tampon (non documenté) SmartDrive, améliore
  la performance comme décrit lors de la copie de certains fichiers depuis C:
  sans DOSLFN		25 s copier vers A:	7 s effacer de A:
  avec DOSLFN 0.32n	78 s copier vers A:	12 s effacer de A:
  avec DOSLFN 0.32o	43 s copier vers A:	7 s effacer de A:
* MKLINK peut désormais gérer les répertoires supérieurs à 64KB (rare, non
  testé)
* MKLINK.PAS peut être compilé en une version DPMI pour utiliser davantage la
  mémoire (testé)

Les versions suivantes sont toutes de Jason Hood :

Version 0.32o, première version jh (10/03)
* diverses optimisations de taille ;
* modification de la génération des noms courts des CD, génération de tilde
  SHSUCDX 2.0 ;
+ ajout d'options pour spécifier la taille maximale des chemins (/m[sln]);
- conservation du moment de création (fonctions LFN seulement) ;
- reconnaissance des renommages qui ne concernent que la casse ;
- effacement correct du transport pour les fonctions d'attribut ;
+ prise en charge primitive pour les CD Linux Rock-Ridge ;
* ne charger la table de liens que lors de la lecture d'un nouveau CD (tel que
  déterminé par le VSN) ;
- enlever les espaces de fin des étiquettes de volume Joliet codées de manière
  incorrecte ;
- ne pas écrire le tampon pour le véritable nom LFN (Int21/AX=7160/CL=2) si le
  fichier n'existe guère ;
- permette les périphériques inscriptibles lorsque le lecteur courant est un
  CD ;
* modification du format de fichier la table de liens Joliet (.JLT) (le nom de
  fichier utilise le numéro de série de volume (VSN) au lieu de l'étiquette ;
  TYPE l'affichera) ;
- MKLINK : mappage amélioré des répertoires vides ;
- MKLINK : correction d'un problème potentiel avec les étiquettes de volume
  Joliet ;
+ MKLINK : option pour créer "manuellement" les liens ;
- CP437UNI.TBL: correction de la translation du symbole "micro" (µ).

Version 0.32o, seconde version jh (10/03)
- définir le code d'erreur lors de l'utilisation de la fonction enlèvement du
  lien du joker ;
- correction d'un bug pour trouver des fichiers lors de l'enlèvement du lien
  du joker (wildcard unlink).

Version 0.32o, troisième version jh (12/03, mais datée du 10/03)
- l'effacement sur un CD retournera l'erreur 5 (accès refusé), et non 2
  fichier introuvable) ;
- Les tables de liens de CeQuadrat fonctionnent désormais.

Version 0.33 (07/04)

Utilisateur :

+ fonctions de conversion de l'horodatage (NTFSDOS affiche désormais les temps
  corrects avec DIR)
+ option o pour spécifier le fuseau horaire ou lire la variable d'environnement
  TZ
* modification des compteurs de statistiques en 7 chiffres (DWORDs)
+ l'état inclut la taille du tas utilisé et le fuseau horaire
+ lecture des noms en minuscules générés par XP
- nettoyer les secteurs sales avant de changer de lecteur
- correction d'un bug où "chemin introuvable" devrait être "fichier
  introuvable"
- empêcher le chargement des tables DBCS si DBCS n'est pas utilisé
- meilleure prise en charge du mode de repli (lecteurs réseau et disques CD
  non-Joliet) :
  - obtenir/définir le moment de modification fonctionne ; tous les autres
    échouent et ne réussissent pas en raison d'une erreur
  - effacement des jokers
  - Les informations de Volume (71A0) retournent système de fichiers inconnu
    ("?")
- correction d'un bug concernant la corruption de mémoire par rename (faisait
  planter COMMAND.COM)
- retourner l'erreur 1 (sous-fonction invalide) pour un
  attrib/truename/alias/temps invalide
- échec de toutes les fonctions d'attribut pour les lecteurs
- libérer la table de liens précédente si c'est un CD Rock-Ridge qui est chargé
- correction de la taille de mémoire allouée (le remplissage du tas faisait
  planter DOS) et afficher
- SFN pour créer, mais LFN lors de l'utilisation (ex : SFN MkDir, LFN ChDir,
  DOSLFN ne voyait pas le nouveau répertoire.) ; des problèmes peuvent encore
  exister avec la création de fichiers temporaires (5A)
- Les informations de volume retournent "FAT32" si c'est approprié
- enlever le fichier caché créé quand un répertoire ne pouvait être étendu
* empêcher l'espace libre de devoir être recalculé (DOSLFNMS)

Source :

+ compilations conditionnelles :

    USEOLDDOS	activer le filtrage LFN pour les fonctions de recherche DOS
    USEWINTIME	activer les conversions d'horodatage réelles  Win <-> DOS
    USEXP	activer la lecture des noms en minuscules de XP en 8.3
    USEFREESPC	activer le réglage du compteur de cluster libre DPB
    PROFILE	activer le profilage (nécessite et suppose un Pentium)
    PROFILECACHE activer le profilage du tampon fastopen (nécessite aussi
		 les éléments ci-dessus)
    PATHLOOK	voir ce qui (n')est (pas) en train d'être mis en mémoire tampon

* enlèvement de DT_BIGDOS, ajout de DT_FAT12 et échange des positions de
   DT_FAT16/32
  (DT_FAT?? est le nombre de tétrades par entrée - optimisation de la taille) ;
  DT_DrvPar n'est désormais utilisé que par le CD (distingue Rock-Ridge de
  Joliet)
* correction de certains commentaires, enlèvement de certains codes commentés
* installation directe de l'élément au nom court (PF_Install_Short)
* optimisations de la taille, y compris :
  * la plupart du code relatif au CD est désormais écrasé si sa prise en charge
    n'est pas nécessaire
  * n'utiliser que les fonctions disque/DPB étendues ou standards
  * supposer que les nombres d'alias (à la fois pour DOSLFN et SHSUCDX) sont
    inférieurs à 2560
  * patcher le code directement au lieu de TESTer [ctrl]
* lire 4 secteurs FAT à chaque fois (tampon de 2 Ko)
* nouveau tampon à ouverture rapide (met en tampons 16 répertoires et 16 noms,
  sur tous les disques)
* obtenir/définir l'attribut utilise l'élément de répertoire (plus rapide que
  l'utilisation de DOS)
* Les CD utilisent toujours le secteur 16 en tant que démarrage du volume
  (c'est tout ce que fait SHSUCDX)
- correction d'un bug de printf avec les nombres signés (utilisait CX, pas ECX)
+ option p pour afficher les données de profil
+ option pr pour remettre à zéro les données de profil
+ option pc pour calibrer le chronométrage du profil (recompiler avec cette
  valeur)
* essayer d'utiliser un répertoire en tant que fichier échouera immédiatement
  (cela remplace le test d'attribut de répertoire FindFirst)
* modification du tas pour utiliser les allocations de taille d'octet,
  extension de l'allocation s'il reste 1, 2 ou 3 octets ; enlèvement de la
  stratégie d'allocation
* Alloc_Cluster créé son propre élément de répertoire

Version 0.33a (07/04)
- obtenir l'attribut du répertoire racine

Version 0.33b (07/04)
- effacer tous les jokers, pas seulement le premier

Version 0.34 (11/04) (MSCDEX)
- correction de -r
- suppression de la limite de 2560
* CD : l'étiquette de volume sera trouvée indépendamment du chemin donné
* CD : suppression du code de SHSUCDX
* CD : suppression de la prise en charge de Rock Ridge

Version 0.40 (11/04) (SHSUCDX v3)
* CD : cette version nécessite SHSUCDX v3 pour la prise en charge de Joliet !
* CD : amélioration de la prise en charge de Rock Ridge (ne nécessite plus l'ID
       système "LINUX")
+ CD : ajout de la prise en charge des noms longs ISO
* CD : -r bascule aux même valeurs par défaut que SHSUCDX

Version 0.40a (03/05)
- correction d'un problème de tampon avec les fonctions d'attribut (bug FreeDOS
  1818)
- correction de problèmes de compilation avec TASM 5.3
- correction de mkdir/rename/del FAT juste après l'accès au CD
+ ajout de la prise en charge de Joliet pour SHSUCDX 3.01
- L : correction d'un problème avec dir sous Windows

Version 0.40b (10/05)
- correction du tampon provoquant un plantage lorsque le tas était trop petit
  (problème particulier avec MPXPLAY)
- correction de problèmes du CD (certains programmes ne fonctionnaient pas
  après l'installation depuis un CD)

Version 0.40c (11/05)
- correction de la définition du temps de création lorsqu'un fichier était créé
- correction de davantage de problèmes de CD (tailles des répertoires codés
  incorrectement, recherche de chemin, option /c- lorsque le CD était
  disponible)
- correction de l'échec de recherche de fichiers en raison de NULs stockés dans
  l'entrée de répertoire
* CD : amélioration de la reconnaissance de noms longs ISO

Version 0.40d (09/06)
* modification de l'ouverture en lecture/écriture et en lecture seule en
  simplement lecture/écriture (contournement d'une incompatibilité avec
  Win9X/DOS - DOS Navigator)
* modification des attributs lors de l'ouverture d'un fichier existant en
  lecture seule (contournement d'une incompatibilité avec DR-DOS 7.03 - les
  fichiers système ne s'ouvraient pas et les pipes étaient empêchés)
- conserver IF lors d'un filtrage des LFN des fonctions de recherche des noms
  de fichiers courts
* enchaîner le gestionnaire Int21 en cas de fonction inconnue (fonctions 64
  bits de DR-DOS d'Udo)
+ prise en charge de FAT+ (définir le dword haut de la taille de fichier dans
  les données de recherche)

Version 0.40e (10/06)
- correction d'une incompatibilité avec FreeDOS généré par une incompatibilité
  avec DR-DOS.

Version 0.41 (12/2011)
- invalidation d'un secteur après l'obtention d'un nom court (corrige DIR suite
  à une commande COPY)
- correction de la création d'un nom court (merci à Japheth)
- empêcher le passage en majuscules des octets de fin de DBCS
* arrêt de l'utilisation du tampon FASTOPEN (mais peut être recompilé avec)
* réduction de la taille du .com (grâce à une meilleure définition des appels
  standards)
+ utilisation de XMS pour stocker les pages de code DBCS
+ ajout de cp860uni.tbl (portugais)

Version 0.41a (1/2012)
- la ligne de commande était corrompue par des variables (cela empêchait -z de
  fonctionner)

Version 0.41b (2/2012)
- correction du chargement d'un fichier DBCS avec -z vers le XMS lorsqu'il
  était résident
+ ajout de -f- pour désactiver le repli, utilisation du gestionnaire LFN
  précédent (permet à par exemple NTFSDOS ou Paragon IFS d'utiliser leurs
  fonctions LFN)

Version 0.41c (11/2012)
- définir explicitement carry (supposer un échec) avant d'enchaîner
  (contournement djgpp 2.04 pour les version de DOS antérieures à DOS 7)

Version 0.41d (12/2021)
+ traductions en français et en turc (merci à Berki Yenigün)
* la Suisse n'est plus en allemand par défaut
- correction de la lecture de la variable TZ sans décalage (offset)

Bugs connus restants :
- pas de définition/mise à jour de la date du "dernier accès"
- pas de définition/effacement des DirEnts LFN lors d'un appel aux fonctions
  FCB
- bug VCACHE.386, vous devez désactiver l'accès 32 bits aux fichiers sous
  Windows 3.11
- bug du l'ordre du chargement du pilote LFN - NTFSDOS doit être chargé après
  DOSLFN
- pas de vérification des versions - comportement étrange lors de l'utilisation
  de différentes versions de DOSLFN
- TRUENAME ne gère pas les périphériques correctement
- la création d'un nom *vraiment* long sur un cluster de 512 octets (allouer un
  second cluster échouera ; les autres tailles de cluster auront toujours
  suffisamment d'espace).
- la désactivation peut rendre invalide les répertoires courants des CD (c'est
  équivalent à insérer un autre disque).
- les commandes internes de NIOS ne fonctionnent pas (c'est un problème avec
  NIOS et MS-DOS 7). Solution de contournement : ajouter un lecteur invalide
  au PATH.
- ajouter une barre oblique inversée après un nom de fichier ne trouvera pas ce
  fichier (mais cela fonctionne pour un répertoire).
- NTFSDOS retourne parfois des horodatages erronés - c'est un bug dans NTFSDOS.


e-mail :	 <jadoxa@yahoo.com.au>
Téléchargement : http://doslfn.adoxa.vze.com/
		 https://www-user.tu-chemnitz.de/~heha/hsn/dos/doslfn/

